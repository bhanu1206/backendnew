name: Deploy Spring Boot BackendApp

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and Package with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker Image
        run: docker build -t backendapp:v1 .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag backendapp:v1 bhanu165/backendapp:v1
          docker push bhanu165/backendapp:v1

      - name: Debug SSH Connectivity
        run: |
          echo "Checking if port 22 is open on ${{ secrets.SERVER_IP }}"
          nc -zv ${{ secrets.SERVER_IP }} 22 || echo "Port 22 is not open!"
      - name: Upload SQL file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "src/main/resources/sqlcommands.sql"
          target: "/home/ubuntu/"

      - name: Deploy on Ubuntu
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull MySQL Docker Image
            docker pull mysql:8

            # Stop and remove any existing MySQL container
            docker stop mysql-db || true
            docker rm mysql-db || true

            # Run MySQL on EC2
            docker run -d --name mysql-db --restart always \
              -e MYSQL_ROOT_PASSWORD=Root@123 \
              -e MYSQL_USER=root1 \
              -e MYSQL_PASSWORD=Root@123 \
              -e MYSQL_DATABASE=springboot \
              -p 3306:3306 \
              mysql:8

            # Wait for MySQL to initialize
            sleep 10

            # Copy the uploaded SQL file into the MySQL container
            docker cp /home/ubuntu/src/main/resources/sqlcommands.sql mysql-db:/docker-entrypoint-initdb.d/sqlcommands.sql

            # Execute SQL script inside MySQL container
            docker exec -i mysql-db mysql -u root -pRoot@123 springboot < /home/ubuntu/sqlcommands.sql

            # Pull and deploy backend app
            docker pull bhanu165/backendapp:v1
            docker stop backend || true
            docker rm backend || true
            docker run -d --name backend --restart always \
              -p 8080:8080 \
              --env SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/springboot \
              --env SPRING_DATASOURCE_USERNAME=root1 \
              --env SPRING_DATASOURCE_PASSWORD=Root@123 \
              bhanu165/backendapp:v1



